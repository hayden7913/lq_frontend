{"remainingRequest":"/Users/hayden/MEGA/lq_app/frontend/node_modules/babel-loader/lib/index.js!/Users/hayden/MEGA/lq_app/frontend/node_modules/vuetify-loader/lib/loader.js!/Users/hayden/MEGA/lq_app/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hayden/MEGA/lq_app/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hayden/MEGA/lq_app/frontend/src/components/HeaterControlPanel.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hayden/MEGA/lq_app/frontend/src/components/HeaterControlPanel.vue","mtime":1550188196346},{"path":"/Users/hayden/MEGA/lq_app/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1549843455994},{"path":"/Users/hayden/MEGA/lq_app/frontend/node_modules/babel-loader/lib/index.js","mtime":1549843274850},{"path":"/Users/hayden/MEGA/lq_app/frontend/node_modules/vuetify-loader/lib/loader.js","mtime":1550184880684},{"path":"/Users/hayden/MEGA/lq_app/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1549843455994},{"path":"/Users/hayden/MEGA/lq_app/frontend/node_modules/vue-loader/lib/index.js","mtime":1549843456932}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport _objectSpread from \"/Users/hayden/MEGA/lq_app/frontend/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapMutations } from 'vuex';\nimport ControlPanel from './ControlPanel';\nimport ControlPanelItem from './ControlPanelItem';\nimport PowerControl from './PowerControl';\nimport SliderControl from './SliderControl';\nexport default {\n  name: 'HeaterControlPanel',\n  components: {\n    ControlPanel: ControlPanel,\n    ControlPanelItem: ControlPanelItem,\n    PowerControl: PowerControl,\n    SliderControl: SliderControl\n  },\n  computed: _objectSpread({}, mapGetters(['heater']), {\n    heaterLevel: function heaterLevel() {\n      return Number(this.heater.level);\n    },\n    heaterMinMax: function heaterMinMax() {\n      return [this.heater.minTemp, this.heater.maxTemp];\n    }\n  }),\n  created: function created() {\n    this.$store.dispatch('fetchEnvironmentState');\n  },\n  methods: _objectSpread({}, mapMutations(['toggleHeaterPower', 'updateHeaterLevel']), {\n    getSliderLabel: function getSliderLabel(sliderPos) {\n      return \"\".concat(sliderPos, \"%\");\n    },\n    getTempLabel: function getTempLabel(sliderPos) {\n      return \"\".concat(sliderPos[0], \" \\xB0C\\xA0\\xA0to\\xA0\\xA0\").concat(sliderPos[1], \" \\xB0C\");\n    }\n  })\n};",{"version":3,"sources":["HeaterControlPanel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,SAAA,UAAA,EAAA,YAAA,QAAA,MAAA;AAEA,OAAA,YAAA,MAAA,gBAAA;AACA,OAAA,gBAAA,MAAA,oBAAA;AACA,OAAA,YAAA,MAAA,gBAAA;AACA,OAAA,aAAA,MAAA,iBAAA;AAGA,eAAA;AACA,EAAA,IAAA,EAAA,oBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,YAAA,EAAA,YADA;AAEA,IAAA,gBAAA,EAAA,gBAFA;AAGA,IAAA,YAAA,EAAA,YAHA;AAIA,IAAA,aAAA,EAAA;AAJA,GAFA;AAQA,EAAA,QAAA,oBACA,UAAA,CAAA,CAAA,QAAA,CAAA,CADA;AAEA,IAAA,WAFA,yBAEA;AACA,aAAA,MAAA,CAAA,KAAA,MAAA,CAAA,KAAA,CAAA;AACA,KAJA;AAKA,IAAA,YALA,0BAKA;AACA,aAAA,CAAA,KAAA,MAAA,CAAA,OAAA,EAAA,KAAA,MAAA,CAAA,OAAA,CAAA;AACA;AAPA,IARA;AAiBA,EAAA,OAjBA,qBAiBA;AACA,SAAA,MAAA,CAAA,QAAA,CAAA,uBAAA;AACA,GAnBA;AAoBA,EAAA,OAAA,oBACA,YAAA,CAAA,CAAA,mBAAA,EAAA,mBAAA,CAAA,CADA;AAEA,IAAA,cAFA,0BAEA,SAFA,EAEA;AACA,uBAAA,SAAA;AACA,KAJA;AAKA,IAAA,YALA,wBAKA,SALA,EAKA;AACA,uBAAA,SAAA,CAAA,CAAA,CAAA,qCAAA,SAAA,CAAA,CAAA,CAAA;AACA;AAPA;AApBA,CAAA","sourcesContent":["<template>\n  <ControlPanel\n    label=\"Heater\"\n  >\n    <div id=\"slider\" />\n    <ControlPanelItem label=\"Power\">\n      <PowerControl\n        v-bind:power-on=\"heater.powerOn\"\n        v-on:toggle-power=\"toggleHeaterPower\"\n      />\n    </ControlPanelItem>\n    <ControlPanelItem label=\"Heater Level\">\n      <SliderControl\n        v-bind:level=\"heaterLevel\"\n        v-bind:level-label-func=\"getSliderLabel\"\n        v-on:slider-move=\"updateHeaterLevel\"\n      />\n    </ControlPanelItem>\n    <ControlPanelItem\n      label=\"Temp Range\"\n      v-bind:include-divider=\"false\"\n    >\n      <!-- Returns a range slider since an array is suplied to the level prop -->\n      <SliderControl\n        v-bind:level=\"heaterMinMax\"\n        v-bind:level-label-func=\"getTempLabel\"\n      />\n    </ControlPanelItem>\n  </ControlPanel>\n</template>\n\n<script>\nimport { mapGetters, mapMutations } from 'vuex';\n\nimport ControlPanel from './ControlPanel';\nimport ControlPanelItem from './ControlPanelItem';\nimport PowerControl from './PowerControl';\nimport SliderControl from './SliderControl';\n\n\nexport default {\n  name: 'HeaterControlPanel',\n  components: {\n    ControlPanel,\n    ControlPanelItem,\n    PowerControl,\n    SliderControl,\n  },\n  computed: {\n    ...mapGetters(['heater']),\n    heaterLevel() {\n      return Number(this.heater.level);\n    },\n    heaterMinMax() {\n      return [this.heater.minTemp, this.heater.maxTemp];\n    },\n  },\n  created() {\n    this.$store.dispatch('fetchEnvironmentState');\n  },\n  methods: {\n    ...mapMutations(['toggleHeaterPower', 'updateHeaterLevel']),\n    getSliderLabel(sliderPos) {\n      return `${sliderPos}%`;\n    },\n    getTempLabel(sliderPos) {\n      return `${sliderPos[0]} °C\\u00A0\\u00A0to\\u00A0\\u00A0${sliderPos[1]} °C`;\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/components"}]}