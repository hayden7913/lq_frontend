{"remainingRequest":"/Users/hayden/MEGA/lq_app/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hayden/MEGA/lq_app/frontend/src/components/SliderControl.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hayden/MEGA/lq_app/frontend/src/components/SliderControl.vue","mtime":1550184876829},{"path":"/Users/hayden/MEGA/lq_app/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1549843455994},{"path":"/Users/hayden/MEGA/lq_app/frontend/node_modules/babel-loader/lib/index.js","mtime":1549843274850},{"path":"/Users/hayden/MEGA/lq_app/frontend/node_modules/vuetify-loader/lib/loader.js","mtime":1550184880684},{"path":"/Users/hayden/MEGA/lq_app/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1549843455994},{"path":"/Users/hayden/MEGA/lq_app/frontend/node_modules/vue-loader/lib/index.js","mtime":1549843456932}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport BaseSlider from './BaseSlider';\nimport BaseRangeSlider from './BaseRangeSlider';\nimport { COLOR_PRIMARY } from '../constants/StyleConstants';\n\nexport default {\n  name: 'SliderControl',\n  components: {\n    BaseSlider,\n    BaseRangeSlider,\n  },\n  props: {\n    level: {\n      type: [Number, Array],\n      required: true,\n    },\n    levelLabelFunc: {\n      type: Function,\n      required: true,\n    },\n  },\n  // TODO: consider if there is a better design that allows this component not to have state\n  data() {\n    return {\n      sliderPosition: this.level,\n    };\n  },\n  computed: {\n    levelLabel() {\n      return this.levelLabelFunc(this.sliderPosition);\n    },\n  },\n  created() {\n    this.color = COLOR_PRIMARY;\n  },\n  methods: {\n    emitSliderPosition(pos) {\n      this.sliderPosition = pos;\n      this.$emit('slider-move', pos);\n    },\n  },\n};\n",{"version":3,"sources":["SliderControl.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SliderControl.vue","sourceRoot":"src/components","sourcesContent":["<!-- Returns a Range Slider if an array is supplied for the level prop  -->\n<!-- Returns a normal slider if a scalar is supplid to the level prop -->\n<template>\n  <div class=\"slider-control\">\n    <div class=\"slider-control-slider\">\n      <BaseRangeSlider\n        v-if=\"Array.isArray(level)\"\n        v-bind:levels=\"level\"\n        v-bind:color=\"color\"\n        v-on:slider-move=\"emitSliderPosition\"\n      />\n      <BaseSlider\n        v-else\n        v-bind:value=\"sliderPosition\"\n        v-bind:color=\"color\"\n        v-on:slider-move=\"emitSliderPosition\"\n      />\n    </div>\n    <div class=\"slider-control-level\">\n      {{ levelLabel }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport BaseSlider from './BaseSlider';\nimport BaseRangeSlider from './BaseRangeSlider';\nimport { COLOR_PRIMARY } from '../constants/StyleConstants';\n\nexport default {\n  name: 'SliderControl',\n  components: {\n    BaseSlider,\n    BaseRangeSlider,\n  },\n  props: {\n    level: {\n      type: [Number, Array],\n      required: true,\n    },\n    levelLabelFunc: {\n      type: Function,\n      required: true,\n    },\n  },\n  // TODO: consider if there is a better design that allows this component not to have state\n  data() {\n    return {\n      sliderPosition: this.level,\n    };\n  },\n  computed: {\n    levelLabel() {\n      return this.levelLabelFunc(this.sliderPosition);\n    },\n  },\n  created() {\n    this.color = COLOR_PRIMARY;\n  },\n  methods: {\n    emitSliderPosition(pos) {\n      this.sliderPosition = pos;\n      this.$emit('slider-move', pos);\n    },\n  },\n};\n</script>\n\n<style>\n/* TODO: fix bug where slider jumps to left at 100% */\n.slider-control {\n  display: flex;\n  align-items: center;\n}\n\n.slider-control-slider {\n  width: 300px;\n}\n\n.slider-control-level {\n  margin-left: 20px;\n  width: 110px;\n  text-align: center;\n}\n</style>\n"]}]}